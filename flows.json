[
    {
        "id": "cc64dd72e548f89a",
        "type": "tab",
        "label": "Home Page",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "24e1411905e488b9",
        "type": "tab",
        "label": "Settings Page",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8c23be714302cd61",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#09759f",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#09759f",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#09759f",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0daae7",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#09759f",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "2a4cccc1f2ec666f",
        "type": "ui-base",
        "name": "My Dashboard",
        "path": "/dashboard",
        "includeClientData": true,
        "acceptsClientConfig": [
            "ui-notification",
            "ui-control"
        ],
        "showPathInSidebar": false,
        "showPageTitle": true,
        "navigationStyle": "default",
        "titleBarStyle": "default"
    },
    {
        "id": "b8c087a030a40e88",
        "type": "ui-theme",
        "name": "Default Theme",
        "colors": {
            "surface": "#13458c",
            "primary": "#0095ff",
            "bgPage": "#050505",
            "groupBg": "#f8fcfa",
            "groupOutline": "#e8eded"
        },
        "sizes": {
            "pagePadding": "12px",
            "groupGap": "12px",
            "groupBorderRadius": "4px",
            "widgetGap": "12px"
        }
    },
    {
        "id": "91ca877ba92392b8",
        "type": "ui-page",
        "name": "Home",
        "ui": "2a4cccc1f2ec666f",
        "path": "/home",
        "icon": "home",
        "layout": "grid",
        "theme": "b8c087a030a40e88",
        "order": 1,
        "className": "",
        "visible": true,
        "disabled": false
    },
    {
        "id": "695aa6179659e091",
        "type": "ui-group",
        "name": "Temperature",
        "page": "91ca877ba92392b8",
        "width": "4",
        "height": "1",
        "order": 2,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "c880cc57dd566c40",
        "type": "ui-page",
        "name": "Settings",
        "ui": "2a4cccc1f2ec666f",
        "path": "/settings",
        "icon": "home",
        "layout": "grid",
        "theme": "b8c087a030a40e88",
        "order": 2,
        "className": "",
        "visible": true,
        "disabled": false
    },
    {
        "id": "b4400544237fec79",
        "type": "ui-group",
        "name": "Humidity",
        "page": "91ca877ba92392b8",
        "width": "4",
        "height": "1",
        "order": 3,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "608ec21444db933d",
        "type": "ui-group",
        "name": "Controls",
        "page": "91ca877ba92392b8",
        "width": "2",
        "height": "1",
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "65d2902c5e05e02c",
        "type": "ui-group",
        "name": "Anedya connection credentials",
        "page": "c880cc57dd566c40",
        "width": "3",
        "height": "1",
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "30733624289f93a6",
        "type": "inject",
        "z": "cc64dd72e548f89a",
        "name": "get_latest_data_payload",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"nodes\":[\"20deeee8-f8ae-11ee-9dd8-c3aa61afe2fb\"],\"variable\":\"temperature\"}",
        "payloadType": "json",
        "x": 490,
        "y": 520,
        "wires": [
            [
                "59c9683ac1cecc4b",
                "1e87bd738548db3d"
            ]
        ]
    },
    {
        "id": "f4e40cf92d36e6f0",
        "type": "debug",
        "z": "cc64dd72e548f89a",
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1024.4447174072266,
        "y": 427.88887882232666,
        "wires": []
    },
    {
        "id": "59c9683ac1cecc4b",
        "type": "http request",
        "z": "cc64dd72e548f89a",
        "name": "get_latest_data",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.anedya.io/v1/data/latest",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "Authorization",
                "keyValue": "",
                "valueType": "other",
                "valueValue": "Bearer c93b7fdbcb11a189e8f33a89d1bfa56f92836d5ed3c148ec9bf912f29a9abee5"
            },
            {
                "keyType": "Accept",
                "keyValue": "",
                "valueType": "application/json",
                "valueValue": ""
            }
        ],
        "x": 820,
        "y": 520,
        "wires": [
            [
                "f4e40cf92d36e6f0",
                "fe87a67ec82f45a8"
            ]
        ]
    },
    {
        "id": "fe87a67ec82f45a8",
        "type": "function",
        "z": "cc64dd72e548f89a",
        "name": "function 1",
        "func": "let parsedData;\n\ntry {\n    parsedData = JSON.parse(msg.payload);  // Safely parse the JSON\n} catch (e) {\n    node.error(\"Failed to parse JSON: \" + e.message, msg);\n    return null;  // Stop processing if JSON parsing fails\n}\n\nif (parsedData.data && Array.isArray(parsedData.data) && parsedData.data.length > 0) {\n    const value = parsedData.data[0].value;\n    msg.payload = value;  // Convert the value to a string\n} else {\n    //node.error(\"parsedData.data is not an array or is empty\", msg);\n    return null;  // Stop processing if data is not valid\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1024.4447174072266,
        "y": 527.8888788223267,
        "wires": [
            [
                "f6a975daf07485e8",
                "8e9a4a6a9d353943",
                "dce12d47baa079ca",
                "871123430bed9df4"
            ]
        ]
    },
    {
        "id": "dce12d47baa079ca",
        "type": "debug",
        "z": "cc64dd72e548f89a",
        "name": "debug 2",
        "active": false,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1246.6669158935547,
        "y": 599.9999847412109,
        "wires": []
    },
    {
        "id": "b74bc177fc5caf44",
        "type": "inject",
        "z": "cc64dd72e548f89a",
        "name": "get_latest_data_payload",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"nodes\":[\"20deeee8-f8ae-11ee-9dd8-c3aa61afe2fb\"],\"variable\":\"humidity\"}",
        "payloadType": "json",
        "x": 501.22227478027344,
        "y": 741.2222156524658,
        "wires": [
            [
                "5ac3453baed4a0e7",
                "c9d4c5a6e586d66f"
            ]
        ]
    },
    {
        "id": "2231d177f2971bea",
        "type": "debug",
        "z": "cc64dd72e548f89a",
        "name": "debug 3",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1091.2222747802734,
        "y": 661.2222156524658,
        "wires": []
    },
    {
        "id": "5ac3453baed4a0e7",
        "type": "http request",
        "z": "cc64dd72e548f89a",
        "name": "get_latest_data",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.anedya.io/v1/data/latest",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "Authorization",
                "keyValue": "",
                "valueType": "other",
                "valueValue": "Bearer c93b7fdbcb11a189e8f33a89d1bfa56f92836d5ed3c148ec9bf912f29a9abee5"
            },
            {
                "keyType": "Accept",
                "keyValue": "",
                "valueType": "application/json",
                "valueValue": ""
            }
        ],
        "x": 871.2222747802734,
        "y": 741.2222156524658,
        "wires": [
            [
                "2231d177f2971bea",
                "9c7afb7d7112a9e4"
            ]
        ]
    },
    {
        "id": "9c7afb7d7112a9e4",
        "type": "function",
        "z": "cc64dd72e548f89a",
        "name": "function 2",
        "func": "const parsedData = JSON.parse(msg.payload);\nconst value = parsedData.data[0].value;\nmsg.payload=value\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1091.2222747802734,
        "y": 741.2222156524658,
        "wires": [
            [
                "7179195eaf859061",
                "4374941834cd5278",
                "542ee6e44901b351"
            ]
        ]
    },
    {
        "id": "7179195eaf859061",
        "type": "debug",
        "z": "cc64dd72e548f89a",
        "name": "debug 4",
        "active": false,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1302.2222595214844,
        "y": 872.2222061157227,
        "wires": []
    },
    {
        "id": "70684baa6b26ace2",
        "type": "http request",
        "z": "cc64dd72e548f89a",
        "name": "Anedya Http Post",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.anedya.io/v1/commands/send",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "Authorization",
                "keyValue": "",
                "valueType": "other",
                "valueValue": "Bearer d090d91cad8ba83adea4c27461131b2fa96c293f0ed95527351a88481ddfa58c"
            },
            {
                "keyType": "Accept",
                "keyValue": "",
                "valueType": "application/json",
                "valueValue": ""
            }
        ],
        "x": 1890,
        "y": 20,
        "wires": [
            []
        ]
    },
    {
        "id": "f6a975daf07485e8",
        "type": "ui-chart",
        "z": "cc64dd72e548f89a",
        "group": "695aa6179659e091",
        "name": "Temperature chart 2.0",
        "label": "",
        "order": 2,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "Time",
        "xAxisProperty": "",
        "xAxisPropertyType": "property",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "yAxisLabel": "Celsius (°C)",
        "yAxisProperty": "",
        "ymin": "",
        "ymax": "",
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": "2",
        "showLegend": false,
        "removeOlder": "1",
        "removeOlderUnit": "60",
        "removeOlderPoints": "100",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": "4",
        "height": "5",
        "className": "",
        "x": 1276.6669158935547,
        "y": 539.9999847412109,
        "wires": [
            []
        ]
    },
    {
        "id": "8e9a4a6a9d353943",
        "type": "ui-gauge",
        "z": "cc64dd72e548f89a",
        "name": "Temperature Gauge 2.0",
        "group": "695aa6179659e091",
        "order": 1,
        "width": "2",
        "height": "2",
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "Current Temperature",
        "units": "°C",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#5cd65c"
            },
            {
                "from": "35",
                "color": "#ffc800"
            },
            {
                "from": "70",
                "color": "#ea5353"
            }
        ],
        "min": 0,
        "max": "100",
        "sizeThickness": "16",
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 1286.6669158935547,
        "y": 479.99998474121094,
        "wires": []
    },
    {
        "id": "4374941834cd5278",
        "type": "ui-gauge",
        "z": "cc64dd72e548f89a",
        "name": "Humidity Gauge 2.0",
        "group": "b4400544237fec79",
        "order": 1,
        "width": "2",
        "height": "2",
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "Current Humidity",
        "units": "%",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#5cd65c"
            },
            {
                "from": "35",
                "color": "#ffc800"
            },
            {
                "from": "70",
                "color": "#252be4"
            }
        ],
        "min": 0,
        "max": "100",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 1320,
        "y": 720,
        "wires": []
    },
    {
        "id": "542ee6e44901b351",
        "type": "ui-chart",
        "z": "cc64dd72e548f89a",
        "group": "b4400544237fec79",
        "name": "Humidity chart 2.0",
        "label": "",
        "order": 2,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "Time",
        "xAxisProperty": "",
        "xAxisPropertyType": "property",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "yAxisLabel": "%",
        "yAxisProperty": "",
        "ymin": "",
        "ymax": "",
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": "2",
        "showLegend": false,
        "removeOlder": "1",
        "removeOlderUnit": "60",
        "removeOlderPoints": "100",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": "4",
        "height": "5",
        "className": "",
        "x": 1322.2222595214844,
        "y": 792.2222061157227,
        "wires": [
            []
        ]
    },
    {
        "id": "d0dc83bc988f28d4",
        "type": "ui-switch",
        "z": "cc64dd72e548f89a",
        "d": true,
        "name": "All 2.0",
        "label": "All",
        "group": "608ec21444db933d",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "className": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 270,
        "y": 60,
        "wires": [
            [
                "eafae3fcce8eb99a"
            ]
        ]
    },
    {
        "id": "df81703518d125a0",
        "type": "debug",
        "z": "cc64dd72e548f89a",
        "name": "debug 9",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 60,
        "wires": []
    },
    {
        "id": "eafae3fcce8eb99a",
        "type": "function",
        "z": "cc64dd72e548f89a",
        "name": "function 3",
        "func": "let currentEpochTime = Math.floor(Date.now() / 1000);\nlet future_24_hour_time_ms = (currentEpochTime + 86400) * 1000;\nlet button_state\nif (msg.payload){\n    button_state=\"on\"\n}else{\n    button_state=\"off\"\n}\nlet json_payload = {\n    \"nodeid\": \"20deeee8-f8ae-11ee-9dd8-c3aa61afe2fb\",\n    \"command\": \"bulb\",\n    \"data\": button_state,\n    \"type\": \"string\",\n    \"expiry\": future_24_hour_time_ms\n};\nmsg.payload = JSON.stringify(json_payload);\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 60,
        "wires": [
            [
                "df81703518d125a0"
            ]
        ]
    },
    {
        "id": "96f20efd1e708518",
        "type": "ui-button",
        "z": "cc64dd72e548f89a",
        "group": "608ec21444db933d",
        "name": "ALL-ON",
        "label": "All ON",
        "order": 4,
        "width": "1",
        "height": "1",
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "buttonColor": "'green'",
        "textColor": "",
        "iconColor": "",
        "x": 1020,
        "y": 200,
        "wires": [
            [
                "bea6ac6d48e00268",
                "ad94c98b4df40846",
                "4adaf38a5b456694",
                "9e25a35f4bccae43",
                "a6ee086ccbece116",
                "ead59d17cfacd9ba"
            ]
        ]
    },
    {
        "id": "bea6ac6d48e00268",
        "type": "ui-switch",
        "z": "cc64dd72e548f89a",
        "name": "Light Switch 2.0",
        "label": "Light ",
        "group": "608ec21444db933d",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "className": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 1300,
        "y": 180,
        "wires": [
            [
                "4adaf38a5b456694",
                "a6ee086ccbece116"
            ]
        ]
    },
    {
        "id": "ad94c98b4df40846",
        "type": "ui-switch",
        "z": "cc64dd72e548f89a",
        "name": "Fan Switch 2.0",
        "label": "Fan ",
        "group": "608ec21444db933d",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "className": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 1260,
        "y": 260,
        "wires": [
            [
                "9e25a35f4bccae43",
                "ead59d17cfacd9ba"
            ]
        ]
    },
    {
        "id": "4adaf38a5b456694",
        "type": "function",
        "z": "cc64dd72e548f89a",
        "name": "function 4",
        "func": "let currentEpochTime = Math.floor(Date.now() / 1000);\nlet future_24_hour_time_ms = (currentEpochTime + 86400) * 1000;\nlet button_state\nif (msg.payload){\n    button_state=\"on\"\n}else{\n    button_state=\"off\"\n}\nlet json_payload = {\n    \"nodeid\": \"20deeee8-f8ae-11ee-9dd8-c3aa61afe2fb\",\n    \"command\": \"Light\",\n    \"data\": button_state,\n    \"type\": \"string\",\n    \"expiry\": future_24_hour_time_ms\n};\nmsg.payload = JSON.stringify(json_payload);\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1480,
        "y": 180,
        "wires": [
            [
                "77d96584db78cbf4",
                "a0f80171cf12c210"
            ]
        ]
    },
    {
        "id": "9e25a35f4bccae43",
        "type": "function",
        "z": "cc64dd72e548f89a",
        "name": "function 5",
        "func": "let currentEpochTime = Math.floor(Date.now() / 1000);\nlet future_24_hour_time_ms = (currentEpochTime + 86400) * 1000;\nlet button_state\nif (msg.payload){\n    button_state=\"on\"\n}else{\n    button_state=\"off\"\n}\nlet json_payload = {\n    \"nodeid\": \"20deeee8-f8ae-11ee-9dd8-c3aa61afe2fb\",\n    \"command\": \"fan\",\n    \"data\": button_state,\n    \"type\": \"string\",\n    \"expiry\": future_24_hour_time_ms\n};\nmsg.payload = JSON.stringify(json_payload);\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1480,
        "y": 280,
        "wires": [
            [
                "837b9de2b6cf6336",
                "62e2ec4e9bc1b1b9"
            ]
        ]
    },
    {
        "id": "350c780bab8f24b9",
        "type": "ui-button",
        "z": "cc64dd72e548f89a",
        "group": "608ec21444db933d",
        "name": "ALL-OFF",
        "label": "All OFF",
        "order": 5,
        "width": "1",
        "height": "1",
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "false",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "buttonColor": "'green'",
        "textColor": "",
        "iconColor": "",
        "x": 1020,
        "y": 260,
        "wires": [
            [
                "bea6ac6d48e00268",
                "ad94c98b4df40846",
                "4adaf38a5b456694",
                "ead59d17cfacd9ba",
                "a6ee086ccbece116",
                "a5bd275360fc329d",
                "9e25a35f4bccae43"
            ]
        ]
    },
    {
        "id": "77d96584db78cbf4",
        "type": "debug",
        "z": "cc64dd72e548f89a",
        "name": "debug 7",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1629.555591583252,
        "y": 194.11113154888153,
        "wires": []
    },
    {
        "id": "a0f80171cf12c210",
        "type": "http request",
        "z": "cc64dd72e548f89a",
        "name": "send_command",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.anedya.io/v1/commands/send",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "Authorization",
                "keyValue": "",
                "valueType": "other",
                "valueValue": "Bearer c93b7fdbcb11a189e8f33a89d1bfa56f92836d5ed3c148ec9bf912f29a9abee5"
            },
            {
                "keyType": "Accept",
                "keyValue": "",
                "valueType": "application/json",
                "valueValue": ""
            }
        ],
        "x": 1649.555591583252,
        "y": 154.11113154888153,
        "wires": [
            [
                "5cdedc1853ef804e"
            ]
        ]
    },
    {
        "id": "837b9de2b6cf6336",
        "type": "http request",
        "z": "cc64dd72e548f89a",
        "name": "send_command",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.anedya.io/v1/commands/send",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "Authorization",
                "keyValue": "",
                "valueType": "other",
                "valueValue": "Bearer c93b7fdbcb11a189e8f33a89d1bfa56f92836d5ed3c148ec9bf912f29a9abee5"
            },
            {
                "keyType": "Accept",
                "keyValue": "",
                "valueType": "application/json",
                "valueValue": ""
            }
        ],
        "x": 1651.6666717529297,
        "y": 256.99999809265137,
        "wires": [
            [
                "5b2c40477b81de8e"
            ]
        ]
    },
    {
        "id": "62e2ec4e9bc1b1b9",
        "type": "debug",
        "z": "cc64dd72e548f89a",
        "name": "debug 8",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1630.555591583252,
        "y": 308.1111172437668,
        "wires": []
    },
    {
        "id": "5cdedc1853ef804e",
        "type": "debug",
        "z": "cc64dd72e548f89a",
        "name": "debug 5",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1890.6666717529297,
        "y": 143.0000123977661,
        "wires": []
    },
    {
        "id": "5b2c40477b81de8e",
        "type": "debug",
        "z": "cc64dd72e548f89a",
        "name": "debug 6",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1892.7777519226074,
        "y": 245.88887894153595,
        "wires": []
    },
    {
        "id": "c1cc3cceb3fe9e59",
        "type": "http request",
        "z": "cc64dd72e548f89a",
        "name": "[https] get key-value",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.anedya.io/v1/valuestore/getValue",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "Authorization",
                "keyValue": "",
                "valueType": "other",
                "valueValue": "Bearer c93b7fdbcb11a189e8f33a89d1bfa56f92836d5ed3c148ec9bf912f29a9abee5"
            },
            {
                "keyType": "Accept",
                "keyValue": "",
                "valueType": "application/json",
                "valueValue": ""
            }
        ],
        "x": 971.1110916137695,
        "y": 123.33332824707031,
        "wires": [
            [
                "862b5f4e2026532f"
            ]
        ]
    },
    {
        "id": "af91af683872a6f0",
        "type": "inject",
        "z": "cc64dd72e548f89a",
        "name": "Sync Light state",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 535.5555648803711,
        "y": 168.88890075683594,
        "wires": [
            [
                "70fe308931fe8727"
            ]
        ]
    },
    {
        "id": "70fe308931fe8727",
        "type": "template",
        "z": "cc64dd72e548f89a",
        "name": "light_payload",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n  \"namespace\": {\n    \"scope\": \"node\",\n    \"id\": \"20deeee8-f8ae-11ee-9dd8-c3aa61afe2fb\"\n  },\n  \"key\": \"Light\"\n}",
        "output": "json",
        "x": 615.5555648803711,
        "y": 128.88890075683594,
        "wires": [
            [
                "fd8e02c1b6f38f26"
            ]
        ]
    },
    {
        "id": "fd8e02c1b6f38f26",
        "type": "json",
        "z": "cc64dd72e548f89a",
        "name": "json to string",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 775.5555648803711,
        "y": 128.88890075683594,
        "wires": [
            [
                "c1cc3cceb3fe9e59"
            ]
        ]
    },
    {
        "id": "862b5f4e2026532f",
        "type": "function",
        "z": "cc64dd72e548f89a",
        "name": "function 6",
        "func": "const parsedData = JSON.parse(msg.payload);\nconst value = parsedData.value;\nmsg.payload=value\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1151.1110916137695,
        "y": 123.33332824707031,
        "wires": [
            [
                "bea6ac6d48e00268"
            ]
        ]
    },
    {
        "id": "f4c0839d5174e82e",
        "type": "http request",
        "z": "cc64dd72e548f89a",
        "name": "[https] Fan get key-value",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.anedya.io/v1/valuestore/getValue",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "Authorization",
                "keyValue": "",
                "valueType": "other",
                "valueValue": "Bearer c93b7fdbcb11a189e8f33a89d1bfa56f92836d5ed3c148ec9bf912f29a9abee5"
            },
            {
                "keyType": "Accept",
                "keyValue": "",
                "valueType": "application/json",
                "valueValue": ""
            }
        ],
        "x": 950,
        "y": 320,
        "wires": [
            [
                "ba1e425263033308"
            ]
        ]
    },
    {
        "id": "d36f93173f4aca0d",
        "type": "json",
        "z": "cc64dd72e548f89a",
        "name": "json to string",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 730,
        "y": 320,
        "wires": [
            [
                "f4c0839d5174e82e"
            ]
        ]
    },
    {
        "id": "ba1e425263033308",
        "type": "function",
        "z": "cc64dd72e548f89a",
        "name": "function 7",
        "func": "const parsedData = JSON.parse(msg.payload);\nconst value = parsedData.value;\nmsg.payload=value\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 320,
        "wires": [
            [
                "ad94c98b4df40846"
            ]
        ]
    },
    {
        "id": "25b149d370343765",
        "type": "template",
        "z": "cc64dd72e548f89a",
        "name": "light_payload",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n  \"namespace\": {\n    \"scope\": \"node\",\n    \"id\": \"20deeee8-f8ae-11ee-9dd8-c3aa61afe2fb\"\n  },\n  \"key\": \"Fan\"\n}",
        "output": "json",
        "x": 570,
        "y": 320,
        "wires": [
            [
                "d36f93173f4aca0d"
            ]
        ]
    },
    {
        "id": "6734ac4e428c0a40",
        "type": "inject",
        "z": "cc64dd72e548f89a",
        "name": "Sync Fan state",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 520,
        "y": 280,
        "wires": [
            [
                "25b149d370343765"
            ]
        ]
    },
    {
        "id": "a6ee086ccbece116",
        "type": "function",
        "z": "cc64dd72e548f89a",
        "name": "function 8",
        "func": "var payloadJson\nif(msg.payload){\n    payloadJson={\n  \"namespace\": {\n    \"scope\": \"node\",\n    \"id\": \"20deeee8-f8ae-11ee-9dd8-c3aa61afe2fb\"\n  },\n  \"key\": \"Light\",\n  \"value\": true,\n  \"type\": \"boolean\"\n}\n    }else{\n        payloadJson={\n  \"namespace\": {\n    \"scope\": \"node\",\n    \"id\": \"20deeee8-f8ae-11ee-9dd8-c3aa61afe2fb\"\n  },\n  \"key\": \"Light\",\n  \"value\": false,\n  \"type\": \"boolean\"\n}\n    }\n\nvar jsonStr=JSON.stringify(payloadJson);\nmsg.payload=jsonStr\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1471.1110916137695,
        "y": 103.33332824707031,
        "wires": [
            [
                "720a217c81844fa0"
            ]
        ]
    },
    {
        "id": "720a217c81844fa0",
        "type": "http request",
        "z": "cc64dd72e548f89a",
        "name": "[https] Light set key-value",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.anedya.io/v1/valuestore/setValue",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "Authorization",
                "keyValue": "",
                "valueType": "other",
                "valueValue": "Bearer c93b7fdbcb11a189e8f33a89d1bfa56f92836d5ed3c148ec9bf912f29a9abee5"
            },
            {
                "keyType": "Accept",
                "keyValue": "",
                "valueType": "application/json",
                "valueValue": ""
            }
        ],
        "x": 1681.1110916137695,
        "y": 103.33332824707031,
        "wires": [
            []
        ]
    },
    {
        "id": "872da5f7bf30417e",
        "type": "debug",
        "z": "cc64dd72e548f89a",
        "name": "debug 10",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1880,
        "y": 360,
        "wires": []
    },
    {
        "id": "d6e7d150dec0fda8",
        "type": "http request",
        "z": "cc64dd72e548f89a",
        "name": "[https] Fan set key-value",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.anedya.io/v1/valuestore/setValue",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "Authorization",
                "keyValue": "",
                "valueType": "other",
                "valueValue": "Bearer c93b7fdbcb11a189e8f33a89d1bfa56f92836d5ed3c148ec9bf912f29a9abee5"
            },
            {
                "keyType": "Accept",
                "keyValue": "",
                "valueType": "application/json",
                "valueValue": ""
            }
        ],
        "x": 1690,
        "y": 360,
        "wires": [
            [
                "872da5f7bf30417e"
            ]
        ]
    },
    {
        "id": "ead59d17cfacd9ba",
        "type": "function",
        "z": "cc64dd72e548f89a",
        "name": "function 9",
        "func": "let payloadJson\nif(msg.payload){\n    payloadJson={\n  \"namespace\": {\n    \"scope\": \"node\",\n    \"id\": \"20deeee8-f8ae-11ee-9dd8-c3aa61afe2fb\"\n  },\n  \"key\": \"Fan\",\n  \"value\": true,\n  \"type\": \"boolean\"\n}\n    }else{\n       payloadJson={\n  \"namespace\": {\n    \"scope\": \"node\",\n    \"id\": \"20deeee8-f8ae-11ee-9dd8-c3aa61afe2fb\"\n  },\n  \"key\": \"Fan\",\n  \"value\": false,\n  \"type\": \"boolean\"\n}\n    }\n\nvar jsonStr=JSON.stringify(payloadJson);\nmsg.payload=jsonStr\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1480,
        "y": 360,
        "wires": [
            [
                "d6e7d150dec0fda8"
            ]
        ]
    },
    {
        "id": "1e87bd738548db3d",
        "type": "function",
        "z": "cc64dd72e548f89a",
        "d": true,
        "name": "function 10",
        "func": "var apiKey=global.get(\"apiKey\")\nvar apiKey_in_formate=\"Bearer \"+apiKey\nmsg.apiKey=apiKey_in_formate\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 460,
        "wires": [
            [
                "59c9683ac1cecc4b"
            ]
        ]
    },
    {
        "id": "cbbdadd3f8e2a6cd",
        "type": "change",
        "z": "cc64dd72e548f89a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "c9d4c5a6e586d66f",
        "type": "function",
        "z": "cc64dd72e548f89a",
        "d": true,
        "name": "function 11",
        "func": "var apiKey=global.get(\"apiKey\")\nvar apiKey_in_formate=\"Bearer \"+apiKey\nmsg.apiKey=apiKey_in_formate\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 660,
        "wires": [
            [
                "5ac3453baed4a0e7"
            ]
        ]
    },
    {
        "id": "a5bd275360fc329d",
        "type": "debug",
        "z": "cc64dd72e548f89a",
        "name": "debug 14",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 420,
        "wires": []
    },
    {
        "id": "871123430bed9df4",
        "type": "debug",
        "z": "cc64dd72e548f89a",
        "name": "debug 15",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1240,
        "y": 640,
        "wires": []
    },
    {
        "id": "3b77ceb72c380e2e",
        "type": "debug",
        "z": "24e1411905e488b9",
        "name": "debug 13",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 120,
        "wires": []
    },
    {
        "id": "1b2f80745ba30142",
        "type": "ui-form",
        "z": "24e1411905e488b9",
        "name": "Anedya connection credentials",
        "group": "65d2902c5e05e02c",
        "label": "",
        "order": 1,
        "width": "3",
        "height": "1",
        "options": [
            {
                "label": "Node Id",
                "key": "nodeId",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Api key",
                "key": "apiKey",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "nodeId": "",
            "apiKey": ""
        },
        "payload": "",
        "submit": "Set",
        "cancel": "clear",
        "resetOnSubmit": false,
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "passthru": false,
        "x": 370,
        "y": 120,
        "wires": [
            [
                "c2e2d15e0820f94d"
            ]
        ]
    },
    {
        "id": "c2e2d15e0820f94d",
        "type": "function",
        "z": "24e1411905e488b9",
        "name": "func to set the nodeId and apiKey",
        "func": "let form_data=msg.payload\nlet nodeId=form_data.nodeId\nlet apiKey=form_data.apiKey\nglobal.set(\"nodeId\",nodeId)\nglobal.set(\"apiKey\",apiKey)\nlet get_nodeId=global.get(\"nodeId\")\nlet get_apiKey=global.get(\"apiKey\")\nlet json_payload={\n    \"node_id\":get_nodeId,\n    \"api_key\":get_apiKey\n}\nmsg.payload=JSON.stringify(json_payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 120,
        "wires": [
            [
                "3b77ceb72c380e2e"
            ]
        ]
    }
]